<% content_for :title, "Êõ∏Á±ç„ÇíËøΩÂä†" %>

<div class="add-book-container">
    <div class="back-navigation">
        <%= link_to books_path, class: "back-button" do %>
        ‚Üê Êàª„Çã
        <% end %>
    </div>

    <h1 class="page-title">Êñ∞„Åó„ÅÑÊõ∏Á±ç„ÇíËøΩÂä†</h1>

    <div class="search-section">
        <div class="search-card">
            <h2 class="section-title">Êõ∏Á±ç„ÇíÊ§úÁ¥¢</h2>

            <div class="search-form">
                <input type="text" id="search-input" placeholder="Êõ∏Á±ç„ÅÆ„Çø„Ç§„Éà„É´„ÄÅËëóËÄÖÂêçÁ≠â„ÅÆ„Ç≠„Éº„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ" class="search-input">
                <button onclick="BookSearch.search(1)" class="search-button">Ê§úÁ¥¢</button>
            </div>

            <div id="search-results" class="search-results"></div>
            <div id="search-pagination" class="search-pagination"></div>
            <div id="pagination-info" class="pagination-info"></div>
        </div>
    </div>

    <div class="manual-section">
        <div class="manual-card">
            <h2 class="section-title">ÊâãÂãï„ÅßÂÖ•Âäõ</h2>

            <%= form_with model: @book, local: true, class: "book-form" do |form| %>
            <% if @book.errors.any? %>
            <div class="error-messages">
                <ul>
                    <% @book.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                    <% end %>
                </ul>
            </div>
            <% end %>

            <div class="form-group">
                <%= form.label :title, "„Çø„Ç§„Éà„É´", class: "form-label" %>
                <%= form.text_field :title, required: true, class: "form-input", id: "book_title" %>
            </div>

            <div class="form-group">
                <%= form.label :author, "ËëóËÄÖ", class: "form-label" %>
                <%= form.text_field :author, class: "form-input", id: "book_author" %>
            </div>

            <div class="form-group">
                <%= form.label :publisher, "Âá∫ÁâàÁ§æ", class: "form-label" %>
                <%= form.text_field :publisher, class: "form-input", id: "book_publisher" %>
            </div>

            <div class="form-group">
                <%= form.label :cover_image_url, "Ë°®Á¥ôÁîªÂÉèURL", class: "form-label" %>
                <%= form.url_field :cover_image_url, class: "form-input", id: "book_cover_image_url" %>
            </div>

            <div class="form-group">
                <%= form.label :rating, "Ë©ï‰æ°", class: "form-label" %>
                <%= form.select :rating, options_for_select([
                    ['Êú™Ë©ï‰æ°', nil],
                    ['‚òÖ‚òÜ‚òÜ‚òÜ‚òÜ (1)', 1],
                    ['‚òÖ‚òÖ‚òÜ‚òÜ‚òÜ (2)', 2],
                    ['‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ (3)', 3],
                    ['‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ (4)', 4],
                    ['‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (5)', 5]
                ]), {}, { class: "form-select" } %>
            </div>

            <div class="form-group">
                <%= form.label :memo, "„É°„É¢„ÉªÊÑüÊÉ≥", class: "form-label" %>
                <%= form.text_area :memo, rows: 6, placeholder: "Ë™≠„Çì„Å†ÊÑüÊÉ≥„ÇÑÂç∞Ë±°„Å´ÊÆã„Å£„ÅüÈÉ®ÂàÜ„ÇíË®òÈå≤„Åó„Åæ„Åó„Çá„ÅÜ", class: "form-textarea" %>
            </div>

            <div class="form-actions">
                <%= form.submit "‰øùÂ≠ò", class: "submit-button primary" %>
                <%= link_to "„Ç≠„É£„É≥„Çª„É´", books_path, class: "submit-button secondary" %>
            </div>
            <% end %>
        </div>
    </div>
</div>

<script>
    (function() {
        'use strict';

        window.BookSearch = {
            currentQuery: '',
            currentPage: 1,
            totalPages: 0,
            isLoading: false,

            async search(page = 1) {
                const query = document.getElementById('search-input').value.trim();
                const resultsDiv = document.getElementById('search-results');
                const paginationDiv = document.getElementById('search-pagination');
                const paginationInfo = document.getElementById('pagination-info');

                if (!query) {
                    resultsDiv.innerHTML = '<div class="search-empty">Ê§úÁ¥¢„Ç≠„Éº„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ</div>';
                    paginationDiv.style.display = 'none';
                    paginationInfo.style.display = 'none';
                    return;
                }

                if (this.isLoading) return;

                this.isLoading = true;
                this.currentQuery = query;
                this.currentPage = page;

                const startIndex = (page - 1) * 10;

                resultsDiv.innerHTML = '<div class="search-loading">Ê§úÁ¥¢‰∏≠...</div>';
                paginationDiv.style.display = 'none';
                paginationInfo.style.display = 'none';

                try {
                    const response = await fetch(`/books/search_external?query=${encodeURIComponent(query)}&start_index=${startIndex}`);
                    const data = await response.json();

                    if (data.error) {
                        throw new Error(data.error);
                    }

                    if (data.items.length > 0) {
                        this.displayResults(data.items);
                        this.displayPagination(data.pagination);
                        this.displayPaginationInfo(data.pagination);
                    } else {
                        resultsDiv.innerHTML = '<div class="search-empty">Ê§úÁ¥¢ÁµêÊûú„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü</div>';
                        paginationDiv.style.display = 'none';
                        paginationInfo.style.display = 'none';
                    }
                } catch (error) {
                    resultsDiv.innerHTML = `<div class="search-error">Ê§úÁ¥¢‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error.message}</div>`;
                    paginationDiv.style.display = 'none';
                    paginationInfo.style.display = 'none';
                } finally {
                    this.isLoading = false;
                }
            },

            displayResults(books) {
                const resultsDiv = document.getElementById('search-results');
                let html = '';

                books.forEach(book => {
                    const hasImage = book.cover_image && book.cover_image !== '';
                    html += `
          <div class="search-result-card" onclick="BookSearch.selectBook('${this.escapeHtml(book.title)}', '${this.escapeHtml(book.authors)}', '${this.escapeHtml(book.publisher)}', '${this.escapeHtml(book.cover_image || '')}')">
            <div class="result-cover">
              ${hasImage ? 
                `<img src="${book.cover_image}" alt="${this.escapeHtml(book.title)}" class="result-image">` : 
                `<div class="result-placeholder">üìñ</div>`
              }
            </div>
            <div class="result-info">
              <h3 class="result-title">${this.escapeHtml(book.title)}</h3>
              <p class="result-author">${this.escapeHtml(book.authors)}</p>
              <p class="result-publisher">${this.escapeHtml(book.publisher)}</p>
            </div>
          </div>
        `;
                });

                resultsDiv.innerHTML = html;
            },

            displayPagination(pagination) {
                const paginationDiv = document.getElementById('search-pagination');
                const currentPage = pagination.current_page;
                const totalPages = pagination.total_pages;

                if (totalPages <= 1) {
                    paginationDiv.style.display = 'none';
                    return;
                }

                let html = '';

                if (pagination.has_prev) {
                    html += `<button class="pagination-button" onclick="BookSearch.search(${currentPage - 1})">Ââç„Å∏</button>`;
                }

                for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) {
                    if (i === currentPage) {
                        html += `<button class="pagination-button active">${i}</button>`;
                    } else {
                        html += `<button class="pagination-button" onclick="BookSearch.search(${i})">${i}</button>`;
                    }
                }

                if (pagination.has_next) {
                    html += `<button class="pagination-button" onclick="BookSearch.search(${currentPage + 1})">Ê¨°„Å∏</button>`;
                }

                paginationDiv.innerHTML = html;
                paginationDiv.style.display = 'flex';
            },

            displayPaginationInfo(pagination) {
                const paginationInfo = document.getElementById('pagination-info');

                if (pagination.total_items === 0) {
                    paginationInfo.style.display = 'none';
                    return;
                }

                const startItem = pagination.start_index + 1;
                const endItem = Math.min(pagination.start_index + 10, pagination.total_items);

                paginationInfo.innerHTML = `${startItem}„Äú${endItem}‰ª∂ / ÂÖ®${pagination.total_items}‰ª∂`;
                paginationInfo.style.display = 'block';
            },

            selectBook(title, authors, publisher, coverImage) {
                document.getElementById('book_title').value = title;
                document.getElementById('book_author').value = authors;
                document.getElementById('book_publisher').value = publisher;
                document.getElementById('book_cover_image_url').value = coverImage;

                document.getElementById('book_title').scrollIntoView({
                    behavior: 'smooth'
                });

                const message = document.createElement('div');
                message.innerHTML = '‚úÖ Êõ∏Á±ç„ÅåÈÅ∏Êäû„Åï„Çå„Åæ„Åó„Åü';
                message.className = 'selection-message';
                document.body.appendChild(message);

                setTimeout(() => {
                    message.remove();
                }, 3000);
            },

            searchExample(query) {
                document.getElementById('search-input').value = query;
                this.search(1);
            },

            escapeHtml(text) {
                if (!text) return '';
                const div = document.createElement('div');
                div.textContent = text;
                return div.innerHTML;
            }
        };

        // Enter„Ç≠„Éº„Åß„ÅÆÊ§úÁ¥¢
        document.getElementById('search-input').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                BookSearch.search(1);
            }
        });
    })();
</script>